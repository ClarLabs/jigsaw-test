openapi: 3.0.4
info:
  title: Swagger Posts - OpenAPI 3.0
  version: '0.0.1'

paths:
  /posts:
    get:
      tags:
        - posts
      summary: Get All Posts
      description: Get All Posts with optional pagination.
      operationId: getAllPosts
      parameters:
        - name: page
          in: query
          required: false
          description: Page number for pagination (default 1)
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          required: false
          description: Number of results per page (default 10)
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: Successful operation
    post:
      tags:
        - posts
      summary: Creates a new post
      description: Creates a new post.
      operationId: createPost
      requestBody:
        description: Post data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      responses:
        '200':
          description: successful operation
    delete:
      tags:
        - posts
      summary: Delete Posts by Tag
      description: Delete all posts where the specified tag exists in the tags array.
      operationId: deletePostsByTag
      parameters:
        - name: tag
          in: query
          required: true
          description: Tag to filter posts for deletion
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted matching posts

  /posts/{id}:
    get:
      tags:
        - posts
      summary: Get Post By ID
      operationId: getPostById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the post
          schema:
            type: string
      responses:
        '200':
          description: successful operation
    put:
      tags:
        - posts
      summary: Update Post By ID
      operationId: updatePostById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the post
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: successful operation
    delete:
      tags:
        - posts
      summary: Delete Post By ID
      operationId: deletePostById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the post
          schema:
            type: string
      responses:
        '200':
          description: successful operation

  /posts/search:
    get:
      tags:
        - posts
      summary: Search Posts
      description: Search posts by title, content, or tags using a query string.
      operationId: searchPosts
      parameters:
        - name: q
          in: query
          required: true
          description: The search query string
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: Page number for pagination (default 1)
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          required: false
          description: Number of results per page (default 10)
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'

components:
  schemas:
    Post:
      required:
        - title
        - content
      type: object
      properties:
        title:
          type: string
          example: Hello World
        content:
          type: string
          example: My Content
        tags:
          type: array
          items:
            type: string
            example: tech
